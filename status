[33mcommit a345b256f779f5fcedbb88caba11b620735fc011[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: cudoh <cudoh@student.42wolfsburg.de>
Date:   Sun Apr 28 17:43:51 2024 +0200

    implemented printf function with colors

[1mdiff --git a/.project b/.project[m
[1mnew file mode 100644[m
[1mindex 0000000..cee3df6[m
[1m--- /dev/null[m
[1m+++ b/.project[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<projectDescription>[m
[32m+[m	[32m<name>01_uart</name>[m
[32m+[m	[32m<comment></comment>[m
[32m+[m	[32m<projects>[m
[32m+[m	[32m</projects>[m
[32m+[m	[32m<buildSpec>[m
[32m+[m	[32m</buildSpec>[m
[32m+[m	[32m<natures>[m
[32m+[m	[32m</natures>[m
[32m+[m[32m</projectDescription>[m
[1mdiff --git a/Makefile b/Makefile[m
[1mindex fb3c5b7..90ad3ca 100644[m
[1m--- a/Makefile[m
[1m+++ b/Makefile[m
[36m@@ -31,6 +31,7 @@[m [mSRCS = 	main.c \[m
 	bsp_uart.c \[m
 	bsp_timer.c \[m
 	ring_buffer.c \[m
[32m+[m	[32mserial.c \[m
 [m
 [m
 OBJ_NAMES = $(SRCS:.c=.o)[m
[1mdiff --git a/build/bin/blink b/build/bin/blink[m
[1mnew file mode 100755[m
[1mindex 0000000..6cab45d[m
Binary files /dev/null and b/build/bin/blink differ
[1mdiff --git a/build/obj/bsp.o b/build/obj/bsp.o[m
[1mnew file mode 100644[m
[1mindex 0000000..6c7bf49[m
Binary files /dev/null and b/build/obj/bsp.o differ
[1mdiff --git a/build/obj/bsp_timer.o b/build/obj/bsp_timer.o[m
[1mnew file mode 100644[m
[1mindex 0000000..e3a56b7[m
Binary files /dev/null and b/build/obj/bsp_timer.o differ
[1mdiff --git a/build/obj/bsp_uart.o b/build/obj/bsp_uart.o[m
[1mnew file mode 100644[m
[1mindex 0000000..bd0379d[m
Binary files /dev/null and b/build/obj/bsp_uart.o differ
[1mdiff --git a/build/obj/led.o b/build/obj/led.o[m
[1mnew file mode 100644[m
[1mindex 0000000..5c40422[m
Binary files /dev/null and b/build/obj/led.o differ
[1mdiff --git a/build/obj/main.o b/build/obj/main.o[m
[1mnew file mode 100644[m
[1mindex 0000000..2a0adcf[m
Binary files /dev/null and b/build/obj/main.o differ
[1mdiff --git a/build/obj/ring_buffer.o b/build/obj/ring_buffer.o[m
[1mnew file mode 100644[m
[1mindex 0000000..47ecca3[m
Binary files /dev/null and b/build/obj/ring_buffer.o differ
[1mdiff --git a/build/obj/serial.o b/build/obj/serial.o[m
[1mnew file mode 100644[m
[1mindex 0000000..ed69eed[m
Binary files /dev/null and b/build/obj/serial.o differ
[1mdiff --git a/main.c b/main.c[m
[1mindex a370ddd..89561f5 100644[m
[1m--- a/main.c[m
[1m+++ b/main.c[m
[36m@@ -2,6 +2,7 @@[m
 # include "bsp.h"[m
 # include "bsp_uart.h"[m
 # include "bsp_timer.h"[m
[32m+[m[32m# include "serial.h"[m
 # include "led.h"[m
 [m
 [m
[36m@@ -34,14 +35,10 @@[m [mint main(void)[m
 		//led_toggle();[m
         BSP_TIMER__DelayMs(1000);[m
 		//TestPin_toggle();[m
[31m-		BSP_UART__PutChar('t');[m
[31m-		BSP_UART__PutChar('b');[m
[31m-		BSP_UART__PutChar('y');[m
[31m-		BSP_UART__PutChar('t');[m
[31m-		BSP_UART__PutChar('e');[m
[31m-		BSP_UART__PutChar('s');[m
[31m-		BSP_UART__PutChar('\n');[m
[31m-		BSP_UART__PutString("Hello World\n");[m
[32m+[m[32m        SERIAL__Printf(SERIAL__enTxtColorRed, "Hello World - UART \n");[m
[32m+[m		[32mSERIAL__Printf(SERIAL__enTxtColorMagenta, "Hello World - SERIAL: %%; nbr: %d; char: %c; -ve: %d; \n", 3752, 'b', -3752);[m
[32m+[m		[32mSERIAL__Printf(SERIAL__enTxtColorBlue,"Hello World - SERIAL: hex: %x; HEX: %X; bin: %b; \n", 555, 555, 38);[m
[32m+[m		[32mSERIAL__Printf(0,"Hello world\n");[m
 [m
         //while (1);[m
 	}[m
[1mdiff --git a/serial.c b/serial.c[m
[1mindex e69de29..2742281 100644[m
[1m--- a/serial.c[m
[1m+++ b/serial.c[m
[36m@@ -0,0 +1,157 @@[m
[32m+[m[32m#include "serial.h"[m
[32m+[m
[32m+[m[32mstatic char *colorScheme[SERIAL__enTxtColorMax] =[m[41m [m
[32m+[m[32m{[m
[32m+[m[32m    "\033[0m",[m
[32m+[m[32m    "\033[1;32m",[m
[32m+[m[32m    "\033[1;34m",[m
[32m+[m[32m    "\033[1;31m",[m
[32m+[m[32m    "\033[1;33m",[m
[32m+[m[32m    "\033[1;35m",[m
[32m+[m[32m    "\033[1;36m",[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
[32m+[m[32m/* print numbers according to their base system (2, 10, 16...)*/[m
[32m+[m[32mstatic inline uint16_t PrintBaseNbrs(int nbr, uint8_t base, tenSerialNbrCase c)[m
[32m+[m[32m{[m
[32m+[m[32m    uint16_t      len = 0;[m
[32m+[m[32m    unsigned char chr;[m
[32m+[m[32m    uint8_t       digit;[m
[32m+[m[41m    [m
[32m+[m[32m    if ( nbr >= base )[m
[32m+[m[32m    {[m
[32m+[m[32m        len += PrintBaseNbrs((nbr/base), base, c);[m
[32m+[m[32m    }[m
[32m+[m[32m    digit = (nbr % base);[m
[32m+[m[32m    chr = SERIAL__NBR_DICT_STR[digit];[m
[32m+[m
[32m+[m[32m    /* Check if the character is either of ABCDE */[m
[32m+[m[32m    if ( (digit > 9) && (digit < 16) && c == SERIAL__enLowerCase)[m
[32m+[m[32m    {[m
[32m+[m[32m        BSP_UART__PutChar( (chr + 32) );[m
[32m+[m[32m    }[m
[32m+[m[32m    else[m
[32m+[m[32m    {[m
[32m+[m[32m        BSP_UART__PutChar(chr);[m
[32m+[m[32m    }[m
[32m+[m[32m    len++;[m
[32m+[m[32m    return (len);[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m/* print decimal, integer, unsigned integer numbers */[m
[32m+[m[32mstatic inline uint16_t print_diu(int nbr)[m
[32m+[m[32m{[m
[32m+[m[32m    uint16_t len = 0;[m
[32m+[m[32m    if (nbr < 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        BSP_UART__PutChar('-');[m
[32m+[m[32m        len++;[m
[32m+[m[32m        nbr *= -1;[m
[32m+[m[32m    }[m
[32m+[m[32m    len += PrintBaseNbrs(nbr, 10, SERIAL__enLowerCase);[m
[32m+[m[32m    return (len);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m/* Print hexadecimal numbers in upper and lower case */[m
[32m+[m[32mstatic inline uint16_t print_xX(uint32_t nbr, char fmt)[m
[32m+[m[32m{[m
[32m+[m[32m    uint16_t len = 0;[m
[32m+[m
[32m+[m[32m    BSP_UART__PutString("0x");[m
[32m+[m[32m    len = 2;[m
[32m+[m
[32m+[m[32m    if (fmt == 'x')[m
[32m+[m[32m    {[m
[32m+[m[32m        len += PrintBaseNbrs(nbr, 16, SERIAL__enLowerCase);[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (fmt == 'X')[m
[32m+[m[32m    {[m
[32m+[m[32m        len += PrintBaseNbrs(nbr, 16, SERIAL__enUpperCase);[m
[32m+[m[32m    }[m
[32m+[m[32m    return (len);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m/* print binary number */[m
[32m+[m[32mstatic inline uint16_t print_b(uint32_t nbr)[m
[32m+[m[32m{[m
[32m+[m[32m    uint16_t len = 0;[m
[32m+[m
[32m+[m[32m    BSP_UART__PutString("0b");[m
[32m+[m[32m    len = 2;[m
[32m+[m[32m    len += PrintBaseNbrs(nbr, 2, SERIAL__enLowerCase);[m
[32m+[m[32m    return (len);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32muint32_t SERIAL__Printf(tenSerialTxtColor color, const char *s, ...)   /* Variadic function */[m
[32m+[m[32m{[m
[32m+[m[32m    uint32_t len = 0;[m
[32m+[m[32m    va_list  argList;[m
[32m+[m[32m    char     fmtSpec;[m
[32m+[m
[32m+[m[32m    if (s == (void *)0) goto escape;[m
[32m+[m
[32m+[m[32m    va_start(argList, s);[m
[32m+[m[32m    BSP_UART__PutString(colorScheme[color]);[m
[32m+[m[32m    while(*s != '\0')[m
[32m+[m[32m    {[m
[32m+[m[32m        if (*s != '%')[m
[32m+[m[32m        {[m
[32m+[m[32m            BSP_UART__PutChar(*s);[m
[32m+[m[32m            len++;[m
[32m+[m[32m        }[m
[32m+[m[32m        else[m
[32m+[m[32m        {[m
[32m+[m[32m            fmtSpec = *(s + 1);[m
[32m+[m[32m            s++;                /* skip '%' to the next character       */[m
[32m+[m[32m            switch(fmtSpec)     /* print character based on format spec */[m
[32m+[m[32m            {[m
[32m+[m[32m                case '%':[m
[32m+[m[32m                {[m
[32m+[m[32m                    BSP_UART__PutChar(fmtSpec);[m
[32m+[m[32m                    len++;[m
[32m+[m[32m                    break ;[m
[32m+[m[32m                }[m
[32m+[m[32m                case 'c':[m
[32m+[m[32m                {[m
[32m+[m[32m                    BSP_UART__PutChar((unsigned char)va_arg(argList, int));[m
[32m+[m[32m                    len++;[m
[32m+[m[32m                    break ;[m
[32m+[m[32m                }[m
[32m+[m[32m                case 'd':[m
[32m+[m[32m                case 'i':[m
[32m+[m[32m                case 'u':[m
[32m+[m[32m                {[m
[32m+[m[32m                    len += print_diu(va_arg(argList, int));[m
[32m+[m[32m                    break ;[m
[32m+[m[32m                }[m
[32m+[m[32m                case 'x':[m
[32m+[m[32m                case 'X':[m
[32m+[m[32m                {[m
[32m+[m[32m                    len += print_xX(va_arg(argList, unsigned int), fmtSpec);[m
[32m+[m[32m                    break ;[m
[32m+[m[32m                }[m
[32m+[m[32m                case 'b':[m
[32m+[m[32m                {[m
[32m+[m[32m                    len += print_b(va_arg(argList, unsigned int));[m
[32m+[m[32m                    break ;[m
[32m+[m[32m                }[m
[32m+[m[32m                default:[m
[32m+[m[32m                {/*do nothing */}[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        s++;[m
[32m+[m[32m    }[m
[32m+[m[32m    BSP_UART__PutString(colorScheme[SERIAL__enTxtColorDefault]);[m
[32m+[m[32m    va_end(argList);[m
[32m+[m[32mescape:[m
[32m+[m[32m    return (len);[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/serial.h b/serial.h[m
[1mindex e69de29..5a05c81 100644[m
[1m--- a/serial.h[m
[1m+++ b/serial.h[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m#ifndef SERIAL_H[m
[32m+[m[32m#define SERIAL_H[m
[32m+[m
[32m+[m[32m#include "bsp_uart.h"[m
[32m+[m[32m# include <stdarg.h>[m
[32m+[m[32m# include <stddef.h>[m
[32m+[m
[32m+[m[32m#define SERIAL__NBR_DICT_STR "0123456789ABCDEF"[m
[32m+[m
[32m+[m[32mtypedef enum[m
[32m+[m[32m{[m
[32m+[m[32m    SERIAL__enLowerCase,[m
[32m+[m[32m    SERIAL__enUpperCase,[m
[32m+[m[32m}   tenSerialNbrCase;[m
[32m+[m
[32m+[m[32mtypedef enum[m
[32m+[m[32m{[m
[32m+[m[32m    SERIAL__enTxtColorDefault,[m
[32m+[m[32m    SERIAL__enTxtColorGreen,[m
[32m+[m[32m    SERIAL__enTxtColorBlue,[m
[32m+[m[32m    SERIAL__enTxtColorRed,[m
[32m+[m[32m    SERIAL__enTxtColorYellow,[m
[32m+[m[32m    SERIAL__enTxtColorMagenta,[m
[32m+[m[32m    SERIAL__enTxtColorCyan,[m
[32m+[m[32m    SERIAL__enTxtColorMax,[m
[32m+[m[32m}   tenSerialTxtColor;[m
[32m+[m
[32m+[m[32muint32_t SERIAL__Printf(tenSerialTxtColor color, const char *s, ...);   /* Variadic function */[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m#endif  /* SERIAL_H  */[m[41m [m
\ No newline at end of file[m
